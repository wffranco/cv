---
import Layout from "@/layouts/Layout.astro";
import Map from "@/components/games/metroid-maps/Map.astro";
import { orders, type Order, sort } from "@/data/games/metroid-fusion/locations";

export async function getStaticPaths() {
  return orders.map(({value}) => ({params: {order: value}}));
}

interface Params {
  order?: Order;
}

const { order } = Astro.params as Params;

const locations = sort(order);

const link = (value: Order) => ['/cv/games/metroid-fusion', value].filter(Boolean).join('/');
---
<Layout title="Metroid Fusion - GBA">
  <main class="mx-auto w-max p-3 grid gap-3">
    <h1 class="text-3xl font-bold text-center">Metroid Fusion ({order})</h1>
    <nav>
      <ul class="w-full flex justify-around">
        {orders.map(({name, value}) => (
          <li>
            <a href={link(value)} class="border px-2 py-1 rounded bg-white/10 hover:bg-white/20">
              {name}
            </a>
          </li>
        ))}
      </ul>
    </nav>
    <Map locations={locations} markSize={2} />
  </main>
</Layout>

<style>
main {
  section {
    #map {
      background-image: url('/cv/imgs/metroid-fusion-map.jpg');
      @apply scale-[.5] translate-x-[-25%] translate-y-[-25%];
    }
    &:has(.zoom:checked) {
      &:has(.main-0:checked) #map {
        @apply scale-[1.1] translate-x-[-12%] translate-y-[-32%];
      }
      &:has(.srx-1:checked) #map {
        @apply scale-[1.5] translate-x-[22%] translate-y-[20%];
      }
      &:has(.tro-2:checked) #map {
        @apply scale-[1.5] translate-x-[-24%] translate-y-[16%];
      }
      &:has(.pyr-3:checked) #map {
        @apply scale-[1.3] translate-x-[-61%] translate-y-[16%];
      }
      &:has(.aqa-4:checked) #map {
        @apply scale-[1.25] translate-x-[-57%] translate-y-[-28%];
      }
      &:has(.arc-5:checked) #map {
        @apply scale-[1.2] translate-x-[-20%] translate-y-[-67%];
      }
      &:has(.noc-6:checked) #map {
        @apply scale-[1.5] translate-x-[-70%] translate-y-[-75%];
      }
    }
    &:has(.hide:checked) {
      nav > ul > li:has(.done:checked) {
        @apply hidden;
      }
    }
  }
}
</style>
