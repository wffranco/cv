---
import type { Location } from './locations/types';

interface Props {
  'x-model'?: string;
  class?: ClassList;
  location: Location<Location>;
  locations: Location<Location>[];
  pos: number;
}

const { 'x-model': model, class: c, location, locations, pos } = Astro.props;
const { id, depends, name, sector, status } = location;
---
<div class:list={["grow flex gap-2 align-middle", c]}>
  <input x-ref={`ch${pos}`} id={`c-${pos}`} class="done" type="checkbox" value={id} x-model={model} />
  <label
    title={`${id||''}`}
    class="cursor-pointer flex grow gap-2"
    @dblclick={`$refs.ch${pos}.click()`}
  >
    <input
      x-model="radio"
      id={`r-${pos}`}
      type="radio"
      name="location"
      value={id}
      class:list={['location', sector]}
      @keyup.space={`$refs.ch${pos}.click()`}
    />
    <span class={status}>
      {id} - {name}
    </span>
    {depends && (
      <span class="depends flex ml-auto">
        {[depends].map(id => [id, locations.findIndex(l => l.id === id)+1]).map(([id, pos]) => (
          <label for={`r-${pos}`} title={`Depends on ${id}`} class="cursor-pointer">
            [{pos}]
          </label>
        ))}
      </span>
    )}
  </label>
</div>

<style>
label {
  .careful {
    @apply text-yellow-300 font-bold;
  }
  .hard {
    @apply text-red-500 font-bold;
  }
  .important {
    @apply text-green-300 font-bold;
  }
  .urgent {
    @apply font-bold;
  }
}
</style>
