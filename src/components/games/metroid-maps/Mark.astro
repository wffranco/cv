---
import type { Location } from "./Map.astro";

interface Props {
  class?: ClassList;
  location: Location;
  pos: number;
  size?: number;
}

const { class: c, location, pos, size, ...rest } = Astro.props;
const { id, name, x, y } = location;

const styles = [
  `group-[:has(#r-${pos}:checked)]/locations:block`,
  `group-[:has(#c-${pos}:checked)]/locations:text-indigo-600`,
];
---
<label for={`r-${pos}`}>
  <i
    class:list={["location", c, "hidden group-[:has(.all:checked)]/locations:block", styles]}
    style={{ left: `${x}%`, top: `${y}%`, width: `${size||1}%` }}
    title={`${id} - ${name}`}
    {...rest}
    @dblclick={`$refs.ch${pos}.click()`}
  >
    <i class:list={["arrow hidden animate-bounce text-red-600 pointer-events-none", styles[0]]} />
    <i class:list={["square text-white animate-ping hidden pointer-events-none", styles[0]]} />
    <i class:list={["square text-yellow-300 hover:text-green-300", styles]} />
  </i>
</label>

<style>
i.location {
  @apply absolute aspect-square;
  > .arrow {
    /* @apply absolute w-[70%] aspect-square bg-current left-[15%] bottom-full z-10; */
    mask: url('/cv/imgs/arrow-down.svg') no-repeat center;
  }
  > .square {
    /* @apply absolute w-full aspect-square bg-current; */
    mask: url('/cv/imgs/square-mid-filled.svg') no-repeat center;
    inset: 0 auto auto 0;
  }
}
</style>
